name: Python 

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  python:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-22.04
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    env:
      UV_CACHE_DIR: /tmp/.uv-cache

    steps:
      - uses: actions/checkout@v5

      - name: Set up uv
        if: ${{ matrix.os == 'ubuntu-22.04' || matrix.os == 'macos-latest' }}
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Set up uv
        if: ${{ matrix.os == 'windows-latest' }}
        run: irm https://astral.sh/uv/install.ps1 | iex
        shell: powershell

      - name: Cache folder for uv
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install the project
        working-directory: python
        run: uv sync --all-extras --dev --python ${{ matrix.python-version }}

      - name: Build the wrapper
        uses: PyO3/maturin-action@v1
        with:
          working-directory: python
          command: develop
          args: -E dev
          sccache: 'true'

      - name: Run linter and formatter
        working-directory: python
        run: |
            uv run ruff check
            uv run ruff format --check

      - name: Run tests
        working-directory: python
        run: |
            uv run pytest
